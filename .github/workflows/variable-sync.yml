name: Sync GitHub Org Secrets and Variables

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      delete_missing:
        type: boolean
        description: "Delete secrets and variables not present in config files?"
        required: false
        default: false

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

        ## NOT NEEDED ON SISAL
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y jq

      - name: Check config files
        id: check-configs
        run: |
          echo "Checking config files..."
          VAR_FILE="variables.json"
          SECRETS_FILE="secrets.json"
          if [ ! -f "$VAR_FILE" ]; then
            echo "‚ùå variables.json file was not found. Stopping workflow execution."
            exit 1
          fi
          if [ ! -f "$SECRETS_FILE" ]; then
            echo "‚ùå secrets.json file was not found. Stopping workflow execution."
            exit 1
          fi

      - name: Sync Variables from variables.json
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_PAT }}
        run: |
          echo "Reading variables from variables.json"

          # Use jq to iterate over each key-value pair.
          jq -c '. | to_entries[]' variables.json | while read -r entry; do
            # Extract the variable name and value from the JSON entry.
            VAR_NAME=$(echo "$entry" | jq -r '.key')
            VAR_VALUE=$(echo "$entry" | jq -r '.value')

            echo "üîß Syncing organization variable: $VAR_NAME"

            # Use 'gh variable set' to create or update the variable.
            # It handles the API calls automatically.
            # The --org flag targets organization variables.
            gh variable set "$VAR_NAME" --body "$VAR_VALUE" --org "GamiHealth"
          done

          echo "‚úÖ All variables have been synced successfully."

      - name: Sync Secrets from secrets.json
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_PAT }}
        run: |
          echo "Reading secrets from secrets.json"

          # Use jq to iterate over each key-value pair in the JSON file.
          jq -c '. | to_entries[]' secrets.json | while read -r entry; do
            # Extract the secret name and value from the JSON entry.
            SECRET_NAME=$(echo "$entry" | jq -r '.key')
            SECRET_VALUE=$(echo "$entry" | jq -r '.value')

            echo "üîê Syncing organization secret: $SECRET_NAME"

            # Use 'gh secret set' to create or update the secret.
            # It handles encryption and API calls automatically.
            # The value is piped to prevent it from appearing in shell history.
            # The --org flag targets organization secrets.
            echo "$SECRET_VALUE" | gh secret set "$SECRET_NAME" --org "GamiHealth" --body -
          done

          echo "‚úÖ All secrets have been synced successfully."
